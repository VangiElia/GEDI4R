% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/l4_clip.R
\name{l4_clip}
\alias{l4_clip}
\title{Clip GEDI level 4A data to an extent or Shapefile boundary}
\usage{
l4_clip(gediL4, clip, usegeometry = NULL, tct = NULL)
}
\arguments{
\item{gediL4}{\code{data.table} obtained with the function \code{l4_get} or
\code{l4_getmulti(...,merge=TRUE)}.}

\item{clip}{An object from which an extent can be obtained (xmin,ymin, xmax,
ymax). Currently could be a path to a shp or tif file, an object of class
\code{sf}, a Raster* object or a numeric vector of coordinates.}

\item{usegeometry}{Logical: should the points be clipped on the boundary of an
\code{sf_object} (or path from which an \code{sf_object} can be created). NULL and FALSE
will be interpreted as the same, in that case the extent of \code{clip}
will be used. Deafult to NULL.}

\item{tct}{Numeric: tree cover threshold to filter GEDI data.}
}
\value{
A \code{data.table} object if \code{usegeometry=NULL} or \code{FALSE},
an \code{sf_object} otherwise. It return \code{NULL} if \code{gediL4} is
\code{NULL}.
}
\description{
Useful to get GEDI data for a specific study area, by clipping the data to a
vector boundary or extent. Remember that, by default GEDI coordinates are in
lon/lat format (EPSG 4326).
}
\details{
GEDI coordinates are by defautl in lon/lat format (EPSG 4326). The
function will try to convert the extent of \code{clip} to lon/lat
coordinate system to ensure compatibility during the clip. The only
exeption is when \code{clip} is a numeric vector or a bbox object. In these
cases the user must check that the extent is in lon/lat
projection.
}
\examples{

#Specifying the path to GEDI level4A data (zip file)
outdir = tempdir()
l4_zip <- system.file("extdata",
                      "GEDI04_A_2020186052327_O08834_T03611_02_001_01.zip",
                      package="GEDI4R")
#Unzipping GEDI level4A data
l4 <- unzip(l4_zip,exdir = outdir)
bound <- system.file("extdata","Italy.shp",package="GEDI4R")
#get GEDI data
l4_data <- l4_get(l4)
#clip using path
#deriving extent to clip
clipped <- l4_clip(l4_data,clip=bound,usegeometry = F)
#using polygon boundary to clip
clipped <- l4_clip(l4_data,clip=bound,usegeometry = T)

#clip using bbox
#first we need to convert coordinates in lon/lat
tmp <- raster::shapefile(bound)#read boundary
box <- t(raster::bbox(tmp))#extract bounding box
proj4string <- as.character(tmp@proj4string)#retrive original projection
pj <- proj4::project(box, proj4string, inverse=TRUE)# Transformed data in lat lon
box <-c(t(pj))
clipped <- l4_clip(l4_data,clip=box)
}
